<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>现代技能栈 – TiDB分布式数据库</title><link>https://xiaoping378.gitee.io/docs/3-devops/tidb/</link><description>Recent content in TiDB分布式数据库 on 现代技能栈</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 03 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://xiaoping378.gitee.io/docs/3-devops/tidb/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: TiDB初体验</title><link>https://xiaoping378.gitee.io/docs/3-devops/tidb/tidb-%E5%88%9D%E4%BD%93%E9%AA%8C/</link><pubDate>Thu, 03 Feb 2022 00:00:00 +0000</pubDate><guid>https://xiaoping378.gitee.io/docs/3-devops/tidb/tidb-%E5%88%9D%E4%BD%93%E9%AA%8C/</guid><description>
&lt;h2 id="安装">安装&lt;/h2>
&lt;blockquote>
&lt;p>安装环境要求：&lt;/p>
&lt;ul>
&lt;li>Mac或者单机Linux环境&lt;/li>
&lt;li>可以连接外网&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ol>
&lt;li>执行命令安装&lt;code>TiUP&lt;/code>工具，官方运维管理工具。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl --proto &lt;span style="color:#b44">&amp;#39;=https&amp;#39;&lt;/span> --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh | sh
&lt;/code>&lt;/pre>&lt;/div>&lt;p>命令会有关键信息输出:添加了证书、修改了PATH变量等，需要声明下环境变量，以使&lt;code>tiup&lt;/code>命令能被找到。&lt;/p>
&lt;ol start="2">
&lt;li>声明系统环境变量&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#080;font-style:italic"># 因个人环境，此处会有差异&lt;/span>
&lt;span style="color:#a2f">source&lt;/span> ~/.zshrc
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以&lt;code>echo $PATH&lt;/code>下，看到&lt;code>/root/.tiup/bin&lt;/code>被加到了最前面。&lt;/p>
&lt;ol start="3">
&lt;li>启动单实例集群&lt;/li>
&lt;/ol>
&lt;p>直接执行&lt;code>tiup playground&lt;/code>命令默认会运行最新版本的TiDB集群，其中TiDB Server、TiKV、PD 和 TiFlash 实例各 1 个：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">tiup playground
&lt;/code>&lt;/pre>&lt;/div>&lt;p>具体如下图所示，需要另开一个终端，使用mysql发起连接：
&lt;img src="https://xiaoping378.gitee.io/images/github-dev-2022-02-04-16-16-18.png" alt="">&lt;/p>
&lt;p>目前tidb playground默认启动监听在127的地址，可以通过--host参数更改，但还不能更改端口（经查代码是写死了端口）。&lt;/p>
&lt;ul>
&lt;li>其他可修改参数，可通过&lt;code>tiup playground -h&lt;/code>查看。&lt;/li>
&lt;li>dashboard的默认root用户没有密码，如果是公网暴露了，建议如下添加密码(我这里设置了root密码为&lt;code>tidb&lt;/code>):&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">mysql -h127.0.0.1 -P4000 -uroot
alter user &lt;span style="color:#b44">&amp;#39;root&amp;#39;&lt;/span> identified by &lt;span style="color:#b44">&amp;#39;tidb&amp;#39;&lt;/span>;
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>grafana的登录密码，默认为admin/admin&lt;/li>
&lt;li>&lt;code>tiup update --self&lt;/code>可升级tiup命令&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>mysql客户端可通过&lt;code>yum install -y mysql&lt;/code>或者&lt;code>apt install mysql-client&lt;/code>安装。&lt;/p>
&lt;/blockquote>
&lt;h2 id="集群">集群&lt;/h2>
&lt;p>没有多节点的环境，折腾了一下，要单机玩这个模式的话，需要hack的东西太多，，，目前还不建议这么搞，等有时间看能不能提个PR.&lt;/p>
&lt;h2 id="tidb-server">TIDB Server&lt;/h2>
&lt;p>处理client的SQL请求.&lt;/p>
&lt;h2 id="pd">PD&lt;/h2>
&lt;p>提供全局时钟和Region调度和管理（扩缩容）。&lt;/p>
&lt;h2 id="tikv">TIKV&lt;/h2>
&lt;p>使用rocksDB实现数据持久化，基于此实现了分布式存储引擎，其中的核心点可以理解为以下三点：&lt;/p>
&lt;ul>
&lt;li>事务&lt;/li>
&lt;li>MVCC&lt;/li>
&lt;li>Raft&lt;/li>
&lt;/ul>
&lt;h3 id="分布式事务percolator">分布式事务Percolator&lt;/h3>
&lt;p>基于时间戳的两阶段提交事务解决方案。&lt;/p>
&lt;h3 id="mvcc多版本并发控制">MVCC多版本并发控制&lt;/h3>
&lt;p>&lt;code>COW&lt;/code>的本质。默认revision大的为最新值，&lt;/p>
&lt;h3 id="多副本raft一致性">多副本Raft一致性&lt;/h3>
&lt;p>&lt;strong>Leader选举：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>Term&lt;/code>状态变化，follower -&amp;gt; (random timeout) -&amp;gt; candidate -&amp;gt; leader. 此过程因为网络延迟问题，很可能是进行多轮选举。&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code class="language-plantuml" data-lang="plantuml">@startuml
!theme aws-orange
TiKV1 -&amp;gt; TiKV1: 随机选举时间到，切换为candidate角色，进入term2，发出选举信息
TiKV1 -&amp;gt; TiKV2: 发起选举，term=2
TiKV1 -&amp;gt; TiKV3: 发起选举，term=2
TiKV2 -&amp;gt; TiKV2: 对比term（非拜占庭环境，大家默认信任term大的）
TiKV3 -&amp;gt; TiKV3: 对比term
TiKV2 -&amp;gt; TiKV1: 投一票
TiKV3 -&amp;gt; TiKV1: 投一票
TiKV1 -&amp;gt; TiKV1: 超过一半投票（2x+1），成为Leader
TiKV1 -&amp;gt; TiKV2: 心跳保活
TiKV1 -&amp;gt; TiKV3: 心跳保活
TiKV1 -&amp;gt; TiKV1: 异常了
TiKV2 -&amp;gt; TiKV2: 心跳超时，切换candidate角色，进入term3
TiKV2 -&amp;gt; TiKV3: 发起选举
TiKV3 -&amp;gt; TiKV2: 对比term，并投一票
TiKV2 -&amp;gt; TiKV2: 加上自己的一票，超过一半投票，成为Leader
@enduml
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>leader负责读写请求，follower负责数据多副本复制。日常心跳保活，出问题后，重新选举。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>数据写入&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>propose -&amp;gt; append (local) -&amp;gt; Replicate (remote append) -&amp;gt; commited -&amp;gt; apply&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code class="language-plantuml" data-lang="plantuml">@startuml
!theme aws-orange
用户 -&amp;gt; TiDB_Server: 发起事务数据写入
TiDB_Server -&amp;gt; TiDB_Server: 解析语句，SQL -&amp;gt; KV
TiDB_Server -&amp;gt; PD: 获取KV元信息
PD -&amp;gt; TiDB_Server: 告知该key的range leader信息（TiKV1）
TiDB_Server -&amp;gt; TiKV1: 发起propose
TiKV1 -&amp;gt; TiKV1: 本地append为raft_log
TiKV1 -&amp;gt; TiKV2: 发起Replicate复制
TiKV1 -&amp;gt; TiKV3: 发起Replicate复制
TiKV2 -&amp;gt; TiKV2: 本地append为raft_log
TiKV3 -&amp;gt; TiKV3: 本地append为raft_log
TiKV2 -&amp;gt; TiKV1: 反馈已记录成功
TiKV3 -&amp;gt; TiKV1: 反馈已记录成功
TiKV1 -&amp;gt; TiKV1: 收到大多数节点反馈，进入commited状态
TiKV1 -&amp;gt; TiKV2: 发起commited确认
TiKV1 -&amp;gt; TiKV3: 发起commited确认
TiKV2 -&amp;gt; TiKV1: 进入commited
TiKV3 -&amp;gt; TiKV1: 进入commited
TiKV1 -&amp;gt; TiKV1: 收到大多数节点反馈，进入apply状态，此时业务数据才算真正落盘
TiKV1 -&amp;gt; TiKV2: 发起apply确认
TiKV1 -&amp;gt; TiKV3: 发起apply确认
TiKV2 -&amp;gt; TiKV1: 进入apply
TiKV3 -&amp;gt; TiKV1: 进入apply
TiKV1 -&amp;gt; TiDB_Server: 收到一个apply成功反馈，即可反馈用户写入成功
TiDB_Server -&amp;gt; 用户: 反馈写入成功
@enduml
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>SQL事务的commit对应到这里的apply，这里的commited是指raft中记录上用户的数据更新了（多数据节点记录上用户的写入请求了）。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>数据读取：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>tidb server解析SQL语句 -&amp;gt; 从pd获取对应key的tikv节点信息 -&amp;gt;&lt;/li>
&lt;/ul></description></item></channel></rss>